#!/usr/bin/env bash
PRIMARY='\033[1;36m'
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color
echo -e "${PRIMARY}
 _____      _       _       _ __             
/__   \_ __(_)_   _(_) __ _| / _\ ___  ___   
  / /\/ '__| \ \ / / |/ _\` | \ \ / _ \/ __| 
 / /  | |  | |\ V /| | (_| | |\ \  __/ (__   
 \/   |_|  |_| \_/ |_|\__,_|_\__/\___|\___|  
                                           ${NC}"
if [[ -f .env ]]; then
  source .env
else
  cp .env-example .env
  nano .env
  source .env
fi
[ -z "${TRIVIALSEC_PY_LIB_VER}" ] && echo -e "${RED}TRIVIALSEC_PY_LIB_VER not set${NC}"
export TF_VAR_linode_token=${TF_VAR_linode_token:-$LINODE_CLI_TOKEN}
export TF_VAR_aws_access_key_id=${TF_VAR_aws_access_key_id:-$AWS_ACCESS_KEY_ID}
export TF_VAR_aws_secret_access_key=${TF_VAR_aws_secret_access_key:-$AWS_SECRET_ACCESS_KEY}
[ -z "${TF_VAR_aws_access_key_id}" ] && echo -e "${RED}AWS_ACCESS_KEY_ID (or TF_VAR_aws_access_key_id) not set${NC}"
[ -z "${TF_VAR_aws_secret_access_key}" ] && echo -e "${RED}AWS_SECRET_ACCESS_KEY (or TF_VAR_aws_secret_access_key) not set${NC}"
[ -z "${TF_VAR_linode_token}" ] && echo -e "${RED}LINODE_CLI_TOKEN (or TF_VAR_linode_token) not set${NC}"
readonly default_env=Dev
readonly default_name=$(id -nu)-$(cat /etc/hostname)
export APP_ENV=${APP_ENV:-${default_env}}
export APP_NAME=${APP_NAME:-${default_name}}
export TF_VAR_app_env=${APP_ENV}
export TF_VAR_app_name=${APP_NAME}
aws sts get-caller-identity
echo -e "${GREEN}Getting Parameters with prefix /${APP_ENV}/Deploy/${APP_NAME}${NC}"
export TF_VAR_session_secret_key=$(aws ssm get-parameter --name "/${APP_ENV}/Deploy/${APP_NAME}/session_secret_key" --output text --with-decryption --query 'Parameter.Value' 2>/dev/null)
export TF_VAR_google_api_key=$(aws ssm get-parameter --name "/${APP_ENV}/Deploy/${APP_NAME}/google_api_key" --output text --with-decryption --query 'Parameter.Value' 2>/dev/null)
export TF_VAR_stripe_publishable_key=$(aws ssm get-parameter --name "/${APP_ENV}/Deploy/${APP_NAME}/stripe_publishable_key" --output text --with-decryption --query 'Parameter.Value' 2>/dev/null)
export TF_VAR_stripe_secret_key=$(aws ssm get-parameter --name "/${APP_ENV}/Deploy/${APP_NAME}/stripe_secret_key" --output text --with-decryption --query 'Parameter.Value' 2>/dev/null)
export TF_VAR_stripe_webhook_secret=$(aws ssm get-parameter --name "/${APP_ENV}/Deploy/${APP_NAME}/stripe_webhook_secret" --output text --with-decryption --query 'Parameter.Value' 2>/dev/null)
export TF_VAR_sendgrid_api_key=$(aws ssm get-parameter --name "/${APP_ENV}/Deploy/${APP_NAME}/sendgrid_api_key" --output text --with-decryption --query 'Parameter.Value' 2>/dev/null)
export TF_VAR_phishtank_username=$(aws ssm get-parameter --name "/${APP_ENV}/Deploy/${APP_NAME}/phishtank_username" --output text --with-decryption --query 'Parameter.Value' 2>/dev/null)
export TF_VAR_phishtank_key=$(aws ssm get-parameter --name "/${APP_ENV}/Deploy/${APP_NAME}/phishtank_key" --output text --with-decryption --query 'Parameter.Value' 2>/dev/null)
export TF_VAR_honeyscore_key=$(aws ssm get-parameter --name "/${APP_ENV}/Deploy/${APP_NAME}/honeyscore_key" --output text --with-decryption --query 'Parameter.Value' 2>/dev/null)
export TF_VAR_whoisxmlapi_key=$(aws ssm get-parameter --name "/${APP_ENV}/Deploy/${APP_NAME}/whoisxmlapi_key" --output text --with-decryption --query 'Parameter.Value' 2>/dev/null)
export TF_VAR_domaintools_key=$(aws ssm get-parameter --name "/${APP_ENV}/Deploy/${APP_NAME}/domaintools_key" --output text --with-decryption --query 'Parameter.Value' 2>/dev/null)
export TF_VAR_domaintools_user=$(aws ssm get-parameter --name "/${APP_ENV}/Deploy/${APP_NAME}/domaintools_user" --output text --with-decryption --query 'Parameter.Value' 2>/dev/null)
export TF_VAR_domainsdb_key=$(aws ssm get-parameter --name "/${APP_ENV}/Deploy/${APP_NAME}/domainsdb_key" --output text --with-decryption --query 'Parameter.Value' 2>/dev/null)

git fetch
git status
echo -e "${PRIMARY}$(make --version)${NC}\n$(make help)"
